import cv2
import numpy as np

# Function to detect fire in an image
def detect_fire(image_path):
    image = cv2.imread(image_path)
    hsv = cv2.cvtColor(image, cv2.COLOR_BGR2HSV)
    lower_bound = np.array([18, 50, 50], dtype=np.uint8)
    upper_bound = np.array([35, 255, 255], dtype=np.uint8)
    mask = cv2.inRange(hsv, lower_bound, upper_bound)
    fire_detected = cv2.bitwise_and(image, image, mask=mask)

    contours, _ = cv2.findContours(mask, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
    for contour in contours:
        if cv2.contourArea(contour) > 500:
            x, y, w, h = cv2.boundingRect(contour)
            cv2.rectangle(image, (x, y), (x + w, y + h), (0, 0, 255), 2)
            cv2.putText(image, 'Fire', (x, y - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0, 0, 255), 2)

    return image

# List of image paths
image_paths = ['image1.jpg', 'image2.jpg', 'image3.jpg']

# Detect fire in each image and display the results
for image_path in image_paths:
    result_image = detect_fire(image_path)
    cv2.imshow('Fire Detection', result_image)
    cv2.waitKey(0)

cv2.destroyAllWindows()
