import cv2

# Load the pre-trained Haar Cascade classifier for face and mustache detection
face_cascade = cv2.CascadeClassifier(cv2.data.haarcascades + 'haarcascade_frontalface_default.xml')
mustache_cascade = cv2.CascadeClassifier('haarcascade_mcs_mustache.xml')

# Function to detect mustache in an image
def detect_mustache(image_path):
    image = cv2.imread(image_path)
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    faces = face_cascade.detectMultiScale(gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

    for (x, y, w, h) in faces:
        roi_gray = gray[y:y+h, x:x+w]
        roi_color = image[y:y+h, x:x+w]
        mustaches = mustache_cascade.detectMultiScale(roi_gray, scaleFactor=1.1, minNeighbors=5, minSize=(30, 30))

        for (mx, my, mw, mh) in mustaches:
            cv2.rectangle(roi_color, (mx, my), (mx+mw, my+mh), (255, 0, 0), 2)
            cv2.putText(roi_color, 'Mustache', (mx, my-10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (255, 0, 0), 2)

    return image

# List of image paths
image_paths = ['image1.jpg', 'image2.jpg', 'image3.jpg']

# Detect mustache in each image and display the results
for image_path in image_paths:
    result_image = detect_mustache(image_path)
    cv2.imshow('Mustache Detection', result_image)
    cv2.waitKey(0)

cv2.destroyAllWindows()
